trigger:
  - main

pool: selfhosted
variables:
  - name: hasIntuneChanges
    value: false
  - name: hasApleonaChanges
    value: false
steps:  
      
  - task: Powershell@2
    displayName: 'buikldvhfgfgd'
    inputs:
      targetType: 'inline'
      script: |
        echo $(Build.SourcesDirectory)
        #Write-Host "##vso[task.setvariable variable=Build.SourcesDirectory;]$(Build.SourcesDirectory)\app2"
        echo $(Build.SourcesDirectory)
    
  - task: gitversion/setup@0
    inputs:
      versionSpec: '5.x'
  
  - task: gitversion/execute@0
    inputs:
      targetPath: '$(Build.SourcesDirectory)/app2'
      useConfigFile: true
      configFilePath: '$(Build.SourcesDirectory)/app2/GitVersion.yaml'

  - task: gitversion/execute@0
    inputs:
      versionSpec: '5.x'
      
  
      
  - task: CmdLine@2
    displayName: 'Publish'
    inputs:
      script: |
        bundle exec fastlane test_gitversion
        
  #- task: Bash@3
  #  displayName: 'Determine which apps were updated'
  #  inputs:
  #    targetType: 'inline'
  #    script: |
  #      DIFF=$(git diff HEAD..develop --name-only)
  #      mapfile -t DIFFS <<< "$DIFF"
  #      for i in "${DIFFS[@]}"; do
  ##        echo "i = $i"
  #        for substr in 'app/' ;do
  #          if [[ $i == *"$substr"* ]] ;then
  #            echo "##vso[task.setvariable variable=hasIntuneChanges]true"
  #          fi
  #        done
  #        for substr in 'app2/' ;do
  #          if [[ $i == *"$substr"* ]] ;then
  #            echo "##vso[task.setvariable variable=hasApleonaChanges]true"
  #          fi
  #        done
  #      done
  #      echo "$(hasIntuneChanges)"
  #      echo "$(hasApleonaChanges)"
  
  #- template: temple.yaml
         
  #- task: Bash@3
  #  displayName: 'Determine which apps were updated'
  #  condition: and(succeeded(), or(and(eq(variables['hasIntuneChanges'], 'true'), eq(variables['schema'], 'ApleonaIntune')), and(eq(variables['hasApleonaChanges'], 'true'), eq(variables['schema'], 'Apleona'))))
  #  inputs:
  #    targetType: 'inline'
  #    script: |
  #      echo $(hasApleonaChanges)
  #      echo $(hasIntuneChanges)
  #      echo "Ok "
